name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: {{ "" }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Run tests
        run: pytest

      - name: Run linting
        run: flake8 .
      

  
  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: {{ "" }}
          username: {{ "" }}
          password: {{ "" }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: {{ "" }}/{{ "" }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{ "{{" }}{branch{{ "}}" }}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: {{ "" }}
          labels: {{ "" }}
  

  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Add your cluster configuration here
      # - name: Configure kubectl
      #   run: |
      #     echo "" | base64 -d > kubeconfig
      #     export KUBECONFIG=kubeconfig

      # - name: Deploy to Kubernetes
      #   run: |
      #     helm upgrade --install {{ values.repoName }} ./infrastructure/helm \
      #       --namespace {{ values.namespace }} \
      #       --create-namespace \
      #       --set image.tag={{ "" }}
  

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
